// <auto-generated />
using System;
using GPostgreSQLExample.Repositories.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GPostgreSQLExample.Repositories.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20211111141140_AddPlayerRecords")]
    partial class AddPlayerRecords
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "en_US.utf8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("GPostgreSQLExample.Repositories.Entities.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("account");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_time")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("ModifyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modify_time")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("password");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status")
                        .HasComment("狀態(0:停用、1:啟用、2:鎖住)");

                    b.HasKey("PlayerId");

                    b.HasIndex(new[] { "Account" }, "players_account_idx")
                        .IsUnique();

                    b.ToTable("players", "main");
                });

            modelBuilder.Entity("GPostgreSQLExample.Repositories.Entities.PlayerInfo", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.Property<string>("FullName")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("full_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("last_name");

                    b.Property<string>("Mailbox")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("mailbox");

                    b.Property<string>("NickName")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("nick_name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("phone_number");

                    b.HasKey("PlayerId")
                        .HasName("playerinfos_pk");

                    b.ToTable("PlayerInfos", "main");
                });

            modelBuilder.Entity("GPostgreSQLExample.Repositories.Entities.PlayerRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_time");

                    b.Property<string>("NewData")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("new_data");

                    b.Property<string>("OldData")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("old_data");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.HasKey("Id");

                    b.ToTable("playerRecords", "main");
                });

            modelBuilder.Entity("GPostgreSQLExample.Repositories.Entities.PlayerInfo", b =>
                {
                    b.HasOne("GPostgreSQLExample.Repositories.Entities.Player", "Player")
                        .WithOne("PlayerInfo")
                        .HasForeignKey("GPostgreSQLExample.Repositories.Entities.PlayerInfo", "PlayerId")
                        .HasConstraintName("playerinfos_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GPostgreSQLExample.Repositories.Entities.Player", b =>
                {
                    b.Navigation("PlayerInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
